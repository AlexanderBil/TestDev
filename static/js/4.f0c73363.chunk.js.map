{"version":3,"sources":["Rate/Rate.js"],"names":["Rate","dispatch","useDispatch","date","useSelector","state","rates","currencyRate","dataToConvert","addDataToConvert","inputData","type","payload","useEffect","fetch","then","data","json","addDate","key","addCurrency","localStorage","getItem","currency","prompt","setItem","className","onChange","e","target","value","Object","keys","map","item","i","toFixed"],"mappings":"wHAAA,yCAmEeA,UA/Df,WACE,IAAMC,EAAWC,cACXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,QACxCI,EAAeH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,gBAChDC,EAAgBJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAME,iBAiBjDC,EAAmB,SAACC,GACxBT,EAAS,CAACU,KAAM,iBAAkBC,QAASF,KAqB/C,OAlBAG,qBAAU,WAUR,GATAC,MAAK,mHACJC,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAC,IAvBU,SAACb,GACfF,EAAS,CAACU,KAAM,WAAYC,QAAST,IAuBrCe,CAAQF,EAAKb,MApBK,SAACa,GACnB,IAAI,IAAIG,KAAOH,EACVG,IAAQX,IACTQ,EAAKG,GAAOH,EAAKR,GAAeQ,EAAKG,IAGzCH,EAAKR,GAAiB,EACtBP,EAAS,CAACU,KAAM,eAAgBC,QAASI,IAczCI,CAAYJ,EAAKV,UAG8B,OAA7Ce,aAAaC,QAAQ,oBAA8B,CACnD,IAAIC,EAAWC,OAAO,iBAAkB,OACpBf,EAAP,OAAbc,EAAqCA,EAA6B,OAClEF,aAAaI,QAAQ,oBAAoB,MAE5C,CAACjB,IAIF,sBAAKkB,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,gCAAgDvB,KAChD,sBAAKuB,UAAU,OAAf,UACG,iEACD,uBAAOC,SAAU,SAACC,GAAD,OAAOnB,EAAiBmB,EAAEC,OAAOC,QAAQnB,KAAK,YAEhEoB,OAAOC,KAAKzB,GAAc0B,KAAI,SAACC,EAAMC,GAAP,OAEvB,sBAAKT,UAAU,aAAf,UACA,sBAAKA,UAAU,iBAAf,mBAAuCQ,EAAvC,mBACA,qBAAKR,UAAU,gBAAf,SAAiCnB,EAAa2B,GAAME,QAAQ,KAC5D,qBAAKV,UAAU,kBAAf,SAAkClB,MAHC2B","file":"static/js/4.f0c73363.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Rate.css';\n\nfunction Rate() {\n  const dispatch = useDispatch();\n  const date = useSelector(state => state.rates.date);\n  const currencyRate = useSelector(state => state.rates.currencyRate);\n  const dataToConvert = useSelector(state => state.rates.dataToConvert);\n\n\n  const addDate = (date) => {\n    dispatch({type: \"SET_DATE\", payload: date })\n  }\n\n  const addCurrency = (data) => {\n    for(let key in data) {\n      if(key !== dataToConvert){\n        data[key] = data[dataToConvert]/data[key]\n      } \n    }\n    data[dataToConvert] = 1;\n    dispatch({type: \"SET_CURRENCY\", payload: data})\n  }\n\n  const addDataToConvert = (inputData) => {\n    dispatch({type: \"SET_INPUT_DATA\", payload: inputData })\n  }\n\nuseEffect(() => {\n  fetch (`http://data.fixer.io/api/latest?access_key=0269fc1a1987642f1701c2d415739685&symbols=USD,GBP,RUB,CAD,PLN,UAH,EUR`)\n  .then(data => {\n    return data.json()\n  })\n  .then(data => {\n    addDate(data.date);\n    addCurrency(data.rates);\n    })\n\n  if (localStorage.getItem(\"hasCodeRunBefore\") === null) {\n      let currency = prompt('Enter currency', 'UAH');\n      currency !== null ? addDataToConvert(currency) : addDataToConvert('UAH')\n      localStorage.setItem(\"hasCodeRunBefore\", true);\n  }\n}, [dataToConvert]);\n\n\nreturn(\n  <div className=\"rate\">\n    <div className=\"rate-title\">Exchange rates for {date}</div>\n    <div className='info'>\n       <span>Change current exchange rate:</span>\n      <input onChange={(e) => addDataToConvert(e.target.value)} type=\"text\" />\n    </div>\n    {Object.keys(currencyRate).map((item, i) =>\n            ( \n            <div className=\"rate-block\" key = {i}>\n            <div className=\"rate-block-out\">For 1 {item} you can buy:</div>\n            <div className=\"rate-block-in\" >{currencyRate[item].toFixed(2)}</div>\n            <div className=\"rate-block-name\">{dataToConvert}</div>\n           </div>\n           )\n            )}\n  </div>\n)\n}\n\nexport default Rate;\n"],"sourceRoot":""}